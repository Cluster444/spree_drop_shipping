# TL;DR: YOU SHOULD DELETE THIS FILE
#
# This file was generated by Cucumber-Rails and is only here to get you a head start
# These step definitions are thin wrappers around the Capybara/Webrat API that lets you
# visit pages, interact with widgets and make assertions about page content.
#
# If you use these step definitions as basis for your features you will quickly end up
# with features that are:
#
# * Hard to maintain
# * Verbose to read
#
# A much better approach is to write your own higher level step definitions, following
# the advice in the following blog posts:
#
# * http://benmabey.com/2008/05/19/imperative-vs-declarative-scenarios-in-user-stories.html
# * http://dannorth.net/2011/01/31/whose-domain-is-it-anyway/
# * http://elabs.se/blog/15-you-re-cuking-it-wrong
#


require 'uri'
require 'cgi'
require File.expand_path("../../support/paths.rb", __FILE__)
require File.expand_path("../../support/selectors.rb", __FILE__)

module WithinHelpers
  def with_scope(locator)
    locator ? within(*selector_for(locator)) { yield } : yield
  end
end
World(WithinHelpers)



#========================================================================
# Givens

Given /^I'm on the ((?!page).*) page$/ do |path|
  path = "#{path.downcase.gsub(/\s/, '_')}_path".to_sym
  begin 
    visit send(path)
  rescue 
    puts "#{path} could not be found!"
  end
end


#========================================================================
# Actions

When /^(?:|I )press "([^"]*)"$/ do |button|
  click_button(button)
end

When /^(?:|I )follow "([^"]*)"$/ do |link|
  click_link(link)
end


#========================================================================
# Assertions

Then /^I should see "([^"]*)"$/ do |text|
  assert page.has_content?(text)
end

Then /^I should see "([^"]*)" in (.*)$/ do |text, parent|
  case parent
    when "the main menu"
      parent = "#admin-menu"    
    when "the flash notice"
      parent = ".flash"  
  end
  within parent do
    assert page.has_content?(text)
  end
end


#========================================================================
# Forms

When /^(?:|I )fill in "([^"]*)" with "([^"]*)"$/ do |field, value|
  fill_in(field, :with => value)
end

When /^(?:|I )fill in the following:$/ do |fields|
  fields.rows_hash.each do |name, value|
    When %{I fill in "#{name}" with "#{value}"}
  end
end

When /^(?:|I )select "([^"]*)" from "([^"]*)"$/ do |value, field|
  select(value, :from => field)
end



